generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DATABASE_URL")
}

model User {
  id        String    @id @default(cuid())
  name      String?
  email     String?   @unique
  password  String
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  posts     Post[]
  fridge    Fridge?   @relation("UserFridge")
  list      List?     @relation("UserList")
  myRecipes Recipes[] @relation("UserMyRecipes")
  recipes   Recipes[] @relation("UserRecipes")

  @@map("users")
}

model Post {
  id        String  @id @default(cuid())
  title     String
  content   String?
  published Boolean @default(false)
  authorId  String?
  author    User?   @relation(fields: [authorId], references: [id])
}

model Recipes {
  id          String   @id @default(cuid())
  created_at  DateTime @default(now()) @db.Timestamptz(6)
  title       String
  time        Decimal  @db.Decimal
  portion     Decimal  @db.Decimal
  ingredients Json     @db.Json
  desc        String
  image       String
  authorId    String?
  listId      String?
  author      User?    @relation("UserMyRecipes", fields: [authorId], references: [id])
  list        List?    @relation(fields: [listId], references: [id])
  users       User[]   @relation("UserRecipes")

  @@map("recipes")
}

model List {
  id         String    @id @default(cuid())
  created_at DateTime  @default(now()) @db.Timestamptz(6)
  name       String
  userId     String    @unique
  user       User      @relation("UserList", fields: [userId], references: [id])
  recipes    Recipes[]

  @@map("list")
}

model Fridge {
  id         String       @id @default(cuid())
  created_at DateTime     @default(now()) @db.Timestamptz(6)
  name       String
  userId     String       @unique
  user       User         @relation("UserFridge", fields: [userId], references: [id])
  items      FridgeItem[]

  @@map("fridge")
}

model FridgeItem {
  id         String   @id @default(cuid())
  name       String
  quantity   Int
  created_at DateTime @default(now()) @db.Timestamptz(6)
  updated_at DateTime @updatedAt @db.Timestamptz(6)
  category   String
  fridgeId   String?
  fridge     Fridge?  @relation(fields: [fridgeId], references: [id])

  @@unique([name, fridgeId])
  @@map("fridgeItem")
}
